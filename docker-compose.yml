version: '3'
services:


 nginx:
   image: jwilder/nginx-proxy
   container_name: proxy
   restart: unless-stopped
   volumes:
     - '/var/run/docker.sock:/tmp/docker.sock:ro'
     - './nginx.tmpl:/app/nginx.tmpl'
     - './tls:/etc/nginx/certs:ro'
   ports:
     - '80:80'
     - '443:443'

 db1:
   container_name: db1
   image: mongo:3.4
   restart: unless-stopped
   command: mongod --smallfiles --oplogSize 128 --replSet rs0
   volumes:
     - ./data/db1:/data/db

 db2:
   container_name: db2
   image: mongo:3.4
   restart: unless-stopped
   command: mongod --smallfiles --oplogSize 128 --replSet rs0
   volumes:
     - ./data/db2:/data/db

 db3:
   container_name: db3
   image: mongo:3.4
   restart: unless-stopped
   command: mongod --smallfiles --oplogSize 128 --replSet rs0
   volumes:
     - ./data/db3:/data/db

 mongo-init-replica:
   image: mongo:3.4
   command: 'mongo db1/rocketchat --eval "rs.initiate({ _id: ''rs0'', members: [ { _id: 0, host: ''db1:27017'' },{ _id: 1, host: ''db2:27017'' },{ _id: 2, host: ''db3:27017'' } ]})"'
   depends_on:
     - db1
     - db2
     - db3

 rc:
   image: rocketchat/rocket.chat:latest
   restart: unless-stopped
   volumes:
     - ./uploads:/app/uploads
   environment:
     - PORT=3000
     - ROOT_URL=http://127.0.0.1:3000
     - MONGO_URL=mongodb://db1:27017,db2:27017,db3:27017/rocketchat?replicaSet=rs0
     - MONGO_OPLOG_URL=mongodb://db1:27017,db2:27017,db3:27017/local?replicaSet=rs0
     - MAIL_URL=smtp://smtp.email
     - VIRTUAL_HOST=rocketchat.local
     - IP_HASH=true
   depends_on:
     - db1
     - db2
     - db3
     - mongo-init-replica
